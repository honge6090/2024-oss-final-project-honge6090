{"ast":null,"code":"var _jsxFileName = \"/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AlbumItem from \"../components/AlbumItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n  const [debouncedQuery, setDebouncedQuery] = useState(\"\");\n\n  // Debounce the search query to avoid spamming API requests\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedQuery(query);\n    }, 300); // Delay of 300ms\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [query]);\n  useEffect(() => {\n    async function fetchToken() {\n      const response = await fetch(\"/spotify-token-endpoint\"); // Replace with your token retrieval endpoint\n      const data = await response.json();\n      setToken(data.token);\n    }\n    fetchToken();\n  }, []);\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");\n      const data = await response.json();\n      setAddedAlbums(data);\n    }\n    fetchAddedAlbums();\n  }, []);\n  useEffect(() => {\n    if (!debouncedQuery || !token) return;\n    async function searchAlbums() {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(debouncedQuery)}&type=album`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        const data = await response.json();\n        setAlbums(data.albums ? data.albums.items : []);\n      } else {\n        console.error(\"Failed to fetch albums:\", response.status);\n      }\n    }\n    searchAlbums();\n  }, [debouncedQuery, token]);\n  const addedIds = new Set(addedAlbums.map(a => a.spotifyId));\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n  const handleAddAlbum = async album => {\n    const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(album)\n    });\n    if (response.ok) {\n      const newAlbum = await response.json();\n      setAddedAlbums(prev => [...prev, newAlbum]);\n    } else {\n      console.error(\"Failed to add album.\");\n    }\n  };\n  const handleRemoveAlbum = async album => {\n    const stored = addedAlbums.find(a => a.spotifyId === album.id);\n    if (!stored) return;\n    const response = await fetch(`https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`, {\n      method: \"DELETE\"\n    });\n    if (response.ok) {\n      setAddedAlbums(prev => prev.filter(a => a.id !== stored.id));\n    } else {\n      console.error(\"Failed to remove album.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for an album...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), albums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: albums.map(album => /*#__PURE__*/_jsxDEV(AlbumItem, {\n          album: album,\n          isAdded: addedIds.has(album.id),\n          onToggle: () => handleToggleAlbum(album, addedIds.has(album.id))\n        }, album.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"FpIbuIPcREZKZhci1P+pkUTc+Wg=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","AlbumItem","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","albums","setAlbums","token","setToken","addedAlbums","setAddedAlbums","debouncedQuery","setDebouncedQuery","handler","setTimeout","clearTimeout","fetchToken","response","fetch","data","json","fetchAddedAlbums","searchAlbums","encodeURIComponent","headers","Authorization","ok","items","console","error","status","addedIds","Set","map","a","spotifyId","handleToggleAlbum","album","isAdded","handleRemoveAlbum","handleAddAlbum","method","body","JSON","stringify","newAlbum","prev","stored","find","id","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","length","has","onToggle","_c","$RefreshReg$"],"sources":["/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AlbumItem from \"../components/AlbumItem\";\n\nfunction SearchPage() {\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n  const [debouncedQuery, setDebouncedQuery] = useState(\"\");\n\n  // Debounce the search query to avoid spamming API requests\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedQuery(query);\n    }, 300); // Delay of 300ms\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [query]);\n\n  useEffect(() => {\n    async function fetchToken() {\n      const response = await fetch(\"/spotify-token-endpoint\"); // Replace with your token retrieval endpoint\n      const data = await response.json();\n      setToken(data.token);\n    }\n    fetchToken();\n  }, []);\n\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      const response = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n      );\n      const data = await response.json();\n      setAddedAlbums(data);\n    }\n    fetchAddedAlbums();\n  }, []);\n\n  useEffect(() => {\n    if (!debouncedQuery || !token) return;\n\n    async function searchAlbums() {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${encodeURIComponent(\n          debouncedQuery\n        )}&type=album`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        setAlbums(data.albums ? data.albums.items : []);\n      } else {\n        console.error(\"Failed to fetch albums:\", response.status);\n      }\n    }\n\n    searchAlbums();\n  }, [debouncedQuery, token]);\n\n  const addedIds = new Set(addedAlbums.map((a) => a.spotifyId));\n\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n\n  const handleAddAlbum = async (album) => {\n    const response = await fetch(\n      \"https://6728860f270bd0b97555efb5.mockapi.io/albums\",\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(album),\n      }\n    );\n\n    if (response.ok) {\n      const newAlbum = await response.json();\n      setAddedAlbums((prev) => [...prev, newAlbum]);\n    } else {\n      console.error(\"Failed to add album.\");\n    }\n  };\n\n  const handleRemoveAlbum = async (album) => {\n    const stored = addedAlbums.find((a) => a.spotifyId === album.id);\n    if (!stored) return;\n\n    const response = await fetch(\n      `https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    if (response.ok) {\n      setAddedAlbums((prev) => prev.filter((a) => a.id !== stored.id));\n    } else {\n      console.error(\"Failed to remove album.\");\n    }\n  };\n\n  return (\n    <div>\n      <h1>Search Albums</h1>\n      <input\n        type=\"text\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        placeholder=\"Search for an album...\"\n      />\n\n      {albums.length > 0 && (\n        <div>\n          <h2>Results</h2>\n          <ul>\n            {albums.map((album) => (\n              <AlbumItem\n                key={album.id}\n                album={album}\n                isAdded={addedIds.has(album.id)}\n                onToggle={() =>\n                  handleToggleAlbum(album, addedIds.has(album.id))\n                }\n              />\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}