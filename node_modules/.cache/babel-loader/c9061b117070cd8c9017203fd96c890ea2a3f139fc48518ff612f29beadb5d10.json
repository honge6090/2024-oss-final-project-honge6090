{"ast":null,"code":"var _jsxFileName = \"/Users/eugenehong/git/OSS/2024-oss-assignment-5-honge6090/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ItemList from \"./components/ItemList\";\nimport ItemForm from \"./components/ItemForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  const [editItem, setEditItem] = useState(null);\n\n  // Fetch items on component mount\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  // Function to fetch all items\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get(\"https://6728860f270bd0b97555efb5.mockapi.io/courses\");\n      console.log(response.data); // Log the response to check its structure\n      setItems(response.data);\n    } catch (error) {\n      console.error(\"Error fetching items:\", error);\n    }\n  };\n\n  // Function to add a new item\n  const addItem = async newItem => {\n    try {\n      const response = await axios.post(\"https://6728860f270bd0b97555efb5.mockapi.io/courses\", newItem);\n      setItems([...items, response.data]);\n    } catch (error) {\n      console.error(\"Error adding item:\", error);\n    }\n  };\n\n  // Function to update an existing item\n  const updateItem = async updatedItem => {\n    try {\n      const response = await axios.put(`https://6728860f270bd0b97555efb5.mockapi.io/courses/${updatedItem.id}`, updatedItem);\n      setItems(items.map(item => item.id === updatedItem.id ? response.data : item));\n      setEditItem(null); // Clear edit state\n    } catch (error) {\n      console.error(\"Error updating item:\", error);\n    }\n  };\n\n  // Function to delete an item\n  const deleteItem = async id => {\n    try {\n      await axios.delete(`https://6728860f270bd0b97555efb5.mockapi.io/courses/${id}`);\n      setItems(items.filter(item => item.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting item:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My CRUD App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemForm, {\n      addItem: addItem,\n      editItem: editItem,\n      updateItem: updateItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ItemList, {\n      items: items,\n      deleteItem: deleteItem,\n      setEditItem: setEditItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"uC3Irvxk/GoB7M/179PLbEycj4o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ItemList","ItemForm","jsxDEV","_jsxDEV","App","_s","items","setItems","editItem","setEditItem","fetchItems","response","get","console","log","data","error","addItem","newItem","post","updateItem","updatedItem","put","id","map","item","deleteItem","delete","filter","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eugenehong/git/OSS/2024-oss-assignment-5-honge6090/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport ItemList from \"./components/ItemList\";\nimport ItemForm from \"./components/ItemForm\";\n\nconst App = () => {\n  const [items, setItems] = useState([]);\n  const [editItem, setEditItem] = useState(null);\n\n  // Fetch items on component mount\n  useEffect(() => {\n    fetchItems();\n  }, []);\n\n  // Function to fetch all items\n  const fetchItems = async () => {\n    try {\n      const response = await axios.get(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/courses\"\n      );\n      console.log(response.data); // Log the response to check its structure\n      setItems(response.data);\n    } catch (error) {\n      console.error(\"Error fetching items:\", error);\n    }\n  };\n\n  // Function to add a new item\n  const addItem = async (newItem) => {\n    try {\n      const response = await axios.post(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/courses\",\n        newItem\n      );\n      setItems([...items, response.data]);\n    } catch (error) {\n      console.error(\"Error adding item:\", error);\n    }\n  };\n\n  // Function to update an existing item\n  const updateItem = async (updatedItem) => {\n    try {\n      const response = await axios.put(\n        `https://6728860f270bd0b97555efb5.mockapi.io/courses/${updatedItem.id}`,\n        updatedItem\n      );\n      setItems(\n        items.map((item) => (item.id === updatedItem.id ? response.data : item))\n      );\n      setEditItem(null); // Clear edit state\n    } catch (error) {\n      console.error(\"Error updating item:\", error);\n    }\n  };\n\n  // Function to delete an item\n  const deleteItem = async (id) => {\n    try {\n      await axios.delete(\n        `https://6728860f270bd0b97555efb5.mockapi.io/courses/${id}`\n      );\n      setItems(items.filter((item) => item.id !== id));\n    } catch (error) {\n      console.error(\"Error deleting item:\", error);\n    }\n  };\n\n  return (\n    <div>\n      <h1>My CRUD App</h1>\n      <ItemForm addItem={addItem} editItem={editItem} updateItem={updateItem} />\n      <ItemList\n        items={items}\n        deleteItem={deleteItem}\n        setEditItem={setEditItem}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}