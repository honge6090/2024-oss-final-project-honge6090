{"ast":null,"code":"var _jsxFileName = \"/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AlbumItem from \"../components/AlbumItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n  useEffect(() => {\n    async function fetchToken() {\n      const tk = await getSpotifyToken();\n      setToken(tk);\n    }\n    fetchToken();\n  }, []);\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");\n      const data = await response.json();\n      setAddedAlbums(data);\n    }\n    fetchAddedAlbums();\n  }, []);\n  const handleSearch = async e => {\n    e.preventDefault();\n    if (!query || !token) return;\n    const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=album`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    setAlbums(data.albums ? data.albums.items : []);\n  };\n  const handleAddAlbum = async album => {\n    const existingAlbumsResponse = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");\n    const existingAlbums = await existingAlbumsResponse.json();\n    const isDuplicate = existingAlbums.some(storedAlbum => storedAlbum.spotifyId === album.id);\n    if (isDuplicate) {\n      return;\n    }\n    const albumToPost = {\n      ...album,\n      spotifyId: album.id,\n      rating: 3,\n      genres: []\n    };\n    const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(albumToPost)\n    });\n    if (response.ok) {\n      const newAlbum = await response.json();\n      setAddedAlbums(prev => [...prev, newAlbum]);\n    } else {\n      alert(\"Failed to add album.\");\n    }\n  };\n  const handleRemoveAlbum = async album => {\n    const stored = addedAlbums.find(a => a.spotifyId === album.id);\n    if (!stored) return;\n    const response = await fetch(`https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`, {\n      method: \"DELETE\"\n    });\n    if (response.ok) {\n      setAddedAlbums(prev => prev.filter(a => a.id !== stored.id));\n    } else {\n      alert(\"Failed to remove album.\");\n    }\n  };\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n  const addedIds = new Set(addedAlbums.map(a => a.spotifyId));\n\n  // Navbar styling (no search/my albums links now)\n  const headerStyle = {\n    backgroundColor: \"#000\",\n    // black navbar\n    color: \"#fff\",\n    padding: \"20px\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n\n  // Centering the search form\n  const searchContainerStyle = {\n    margin: \"20px auto\",\n    textAlign: \"center\"\n  };\n  const searchInputStyle = {\n    padding: \"8px\",\n    width: \"200px\",\n    marginRight: \"10px\"\n  };\n  const searchButtonStyle = {\n    padding: \"8px 12px\",\n    cursor: \"pointer\"\n  };\n  const resultsContainerStyle = {\n    margin: \"20px auto\",\n    maxWidth: \"70%\",\n    width: \"100%\"\n  };\n  const resultsHeadingStyle = {\n    fontSize: \"20px\",\n    marginBottom: \"10px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          @media (max-width: 600px) {\n            .responsive-container {\n              max-width: 100% !important;\n            }\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Music Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: searchContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSearch,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: query,\n          onChange: e => setQuery(e.target.value),\n          placeholder: \"Search by album name\",\n          style: searchInputStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: searchButtonStyle,\n          children: \"Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), albums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: resultsContainerStyle,\n      className: \"responsive-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: resultsHeadingStyle,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), albums.map((album, index) => {\n        const isAdded = addedIds.has(album.id);\n        return /*#__PURE__*/_jsxDEV(AlbumItem, {\n          album: album,\n          isAdded: isAdded,\n          onToggle: () => handleToggleAlbum(album, isAdded),\n          rank: index + 1\n        }, album.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n// Replace this with a real token retrieval method.\n_s(SearchPage, \"WtBBzxvAU6Xrz9Wqm3zg5UX7rPQ=\");\n_c = SearchPage;\nasync function getSpotifyToken() {\n  return process.env.REACT_APP_SPOTIFY_TOKEN;\n}\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","AlbumItem","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","albums","setAlbums","token","setToken","addedAlbums","setAddedAlbums","fetchToken","tk","getSpotifyToken","fetchAddedAlbums","response","fetch","data","json","handleSearch","e","preventDefault","encodeURIComponent","headers","Authorization","items","handleAddAlbum","album","existingAlbumsResponse","existingAlbums","isDuplicate","some","storedAlbum","spotifyId","id","albumToPost","rating","genres","method","body","JSON","stringify","ok","newAlbum","prev","alert","handleRemoveAlbum","stored","find","a","filter","handleToggleAlbum","isAdded","addedIds","Set","map","headerStyle","backgroundColor","color","padding","fontWeight","fontSize","display","alignItems","justifyContent","searchContainerStyle","margin","textAlign","searchInputStyle","width","marginRight","searchButtonStyle","cursor","resultsContainerStyle","maxWidth","resultsHeadingStyle","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","style","onSubmit","value","onChange","target","placeholder","type","length","className","index","has","onToggle","rank","_c","process","env","REACT_APP_SPOTIFY_TOKEN","$RefreshReg$"],"sources":["/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport AlbumItem from \"../components/AlbumItem\";\n\nfunction SearchPage() {\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n\n  useEffect(() => {\n    async function fetchToken() {\n      const tk = await getSpotifyToken();\n      setToken(tk);\n    }\n    fetchToken();\n  }, []);\n\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      const response = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n      );\n      const data = await response.json();\n      setAddedAlbums(data);\n    }\n    fetchAddedAlbums();\n  }, []);\n\n  const handleSearch = async (e) => {\n    e.preventDefault();\n    if (!query || !token) return;\n\n    const response = await fetch(\n      `https://api.spotify.com/v1/search?q=${encodeURIComponent(\n        query\n      )}&type=album`,\n      {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    const data = await response.json();\n    setAlbums(data.albums ? data.albums.items : []);\n  };\n\n  const handleAddAlbum = async (album) => {\n    const existingAlbumsResponse = await fetch(\n      \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n    );\n    const existingAlbums = await existingAlbumsResponse.json();\n\n    const isDuplicate = existingAlbums.some(\n      (storedAlbum) => storedAlbum.spotifyId === album.id\n    );\n    if (isDuplicate) {\n      return;\n    }\n\n    const albumToPost = {\n      ...album,\n      spotifyId: album.id,\n      rating: 3,\n      genres: [],\n    };\n\n    const response = await fetch(\n      \"https://6728860f270bd0b97555efb5.mockapi.io/albums\",\n      {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(albumToPost),\n      }\n    );\n\n    if (response.ok) {\n      const newAlbum = await response.json();\n      setAddedAlbums((prev) => [...prev, newAlbum]);\n    } else {\n      alert(\"Failed to add album.\");\n    }\n  };\n\n  const handleRemoveAlbum = async (album) => {\n    const stored = addedAlbums.find((a) => a.spotifyId === album.id);\n    if (!stored) return;\n\n    const response = await fetch(\n      `https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`,\n      {\n        method: \"DELETE\",\n      }\n    );\n\n    if (response.ok) {\n      setAddedAlbums((prev) => prev.filter((a) => a.id !== stored.id));\n    } else {\n      alert(\"Failed to remove album.\");\n    }\n  };\n\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n\n  const addedIds = new Set(addedAlbums.map((a) => a.spotifyId));\n\n  // Navbar styling (no search/my albums links now)\n  const headerStyle = {\n    backgroundColor: \"#000\", // black navbar\n    color: \"#fff\",\n    padding: \"20px\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  };\n\n  // Centering the search form\n  const searchContainerStyle = {\n    margin: \"20px auto\",\n    textAlign: \"center\",\n  };\n\n  const searchInputStyle = {\n    padding: \"8px\",\n    width: \"200px\",\n    marginRight: \"10px\",\n  };\n\n  const searchButtonStyle = {\n    padding: \"8px 12px\",\n    cursor: \"pointer\",\n  };\n\n  const resultsContainerStyle = {\n    margin: \"20px auto\",\n    maxWidth: \"70%\",\n    width: \"100%\",\n  };\n\n  const resultsHeadingStyle = {\n    fontSize: \"20px\",\n    marginBottom: \"10px\",\n  };\n\n  return (\n    <div>\n      <style>\n        {`\n          @media (max-width: 600px) {\n            .responsive-container {\n              max-width: 100% !important;\n            }\n          }\n        `}\n      </style>\n      <div style={headerStyle}>\n        <div>Music Search</div>\n      </div>\n\n      <div style={searchContainerStyle}>\n        <form onSubmit={handleSearch}>\n          <input\n            value={query}\n            onChange={(e) => setQuery(e.target.value)}\n            placeholder=\"Search by album name\"\n            style={searchInputStyle}\n          />\n          <button type=\"submit\" style={searchButtonStyle}>\n            Search\n          </button>\n        </form>\n      </div>\n\n      {albums.length > 0 && (\n        <div style={resultsContainerStyle} className=\"responsive-container\">\n          <h2 style={resultsHeadingStyle}>Results</h2>\n          {albums.map((album, index) => {\n            const isAdded = addedIds.has(album.id);\n            return (\n              <AlbumItem\n                key={album.id}\n                album={album}\n                isAdded={isAdded}\n                onToggle={() => handleToggleAlbum(album, isAdded)}\n                rank={index + 1}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Replace this with a real token retrieval method.\nasync function getSpotifyToken() {\n  return process.env.REACT_APP_SPOTIFY_TOKEN;\n}\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}