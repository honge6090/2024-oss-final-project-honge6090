{"ast":null,"code":"import React,{useState,useEffect,useCallback}from\"react\";import{Link,useLocation}from\"react-router-dom\";import AlbumItem from\"../components/AlbumItem\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function SearchPage(){const[query,setQuery]=useState(\"\");const[albums,setAlbums]=useState([]);const[token,setToken]=useState(\"\");const[addedAlbums,setAddedAlbums]=useState([]);const location=useLocation();//determine the active page\n// fetch Spotify token on component mount\nuseEffect(()=>{async function fetchToken(){const tk=await getSpotifyToken();setToken(tk);}fetchToken();},[]);// fetch added albums on component mount\nuseEffect(()=>{async function fetchAddedAlbums(){try{const response=await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");if(!response.ok){throw new Error(\"Failed to fetch added albums.\");}const data=await response.json();setAddedAlbums(data);}catch(error){console.error(error);alert(\"Error fetching added albums.\");}}fetchAddedAlbums();},[]);const handleSearch=useCallback(async()=>{if(!query||!token)return;try{const response=await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=album`,{headers:{Authorization:`Bearer ${token}`}});if(!response.ok){throw new Error(\"Failed to fetch albums from Spotify.\");}const data=await response.json();setAlbums(data.albums?data.albums.items:[]);}catch(error){console.error(error);alert(\"Error fetching albums from Spotify.\");}},[query,token]);// trigger search whenever search field changes\nuseEffect(()=>{const delayDebounce=setTimeout(()=>{if(query&&token){handleSearch();}else{setAlbums([]);}},500);// 500ms debounce to prevent excessive API calls\nreturn()=>clearTimeout(delayDebounce);},[query,token,handleSearch]);const handleAddAlbum=async album=>{try{// Check for duplicates\nconst existingAlbumsResponse=await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");if(!existingAlbumsResponse.ok){throw new Error(\"Failed to fetch existing albums.\");}const existingAlbums=await existingAlbumsResponse.json();const isDuplicate=existingAlbums.some(storedAlbum=>storedAlbum.spotifyId===album.id);if(isDuplicate){alert(\"Album is already added.\");return;}const albumToPost={...album,spotifyId:album.id,rating:3,genres:[]};const response=await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(albumToPost)});if(!response.ok){throw new Error(\"Failed to add album.\");}const newAlbum=await response.json();setAddedAlbums(prev=>[...prev,newAlbum]);alert(\"Album added successfully!\");}catch(error){console.error(error);alert(\"Error adding album.\");}};const handleRemoveAlbum=async album=>{try{const stored=addedAlbums.find(a=>a.spotifyId===album.id);if(!stored){alert(\"Album not found.\");return;}const response=await fetch(`https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`,{method:\"DELETE\"});if(!response.ok){throw new Error(\"Failed to remove album.\");}setAddedAlbums(prev=>prev.filter(a=>a.id!==stored.id));alert(\"Album removed successfully!\");}catch(error){console.error(error);alert(\"Error removing album.\");}};const handleToggleAlbum=(album,isAdded)=>{if(isAdded){handleRemoveAlbum(album);}else{handleAddAlbum(album);}};const addedIds=new Set(addedAlbums.map(a=>a.spotifyId));// navbar styling\nconst headerStyle={backgroundColor:\"#111111\",color:\"#fff\",padding:\"20px\",fontWeight:\"bold\",fontSize:\"24px\",display:\"flex\",alignItems:\"center\",justifyContent:\"flex-start\",gap:\"20px\",fontFamily:\"sans-serif\"};const navLinkStyle={color:\"#AEAEAE\",textDecoration:\"none\",fontSize:\"16px\",fontFamily:\"sans-serif\"};const activeNavLinkStyle={color:\"#fff\"};const searchContainerStyle={margin:\"20px auto\",textAlign:\"center\",fontFamily:\"sans-serif\"};const searchInputStyle={padding:\"8px\",width:\"300px\",marginRight:\"10px\",backgroundColor:\"#f0f0f0\",// light gray background\ncolor:\"#333\",// dark text\nborder:\"1px solid #ccc\",// light border\nborderRadius:\"4px\",// rounded corners\noutline:\"none\",// remove default outline\nboxSizing:\"border-box\",// ensure padding doesn't affect overall width\ntransition:\"background-color 0.3s, border-color 0.3s\"// smooth transition on focus\n};const resultsContainerStyle={margin:\"20px auto\",maxWidth:\"70%\",width:\"100%\",fontFamily:\"sans-serif\"};const resultsHeadingStyle={fontSize:\"20px\",marginBottom:\"10px\"};const listStyle={display:\"flex\",flexDirection:\"column\",gap:\"20px\"};const pageStyle={backgroundColor:\"#111111\",color:\"#fff\",fontFamily:\"sans-serif\",minHeight:\"100vh\"};return/*#__PURE__*/_jsxs(\"div\",{style:pageStyle,children:[/*#__PURE__*/_jsx(\"style\",{children:`\n          a:hover {\n            color: #fff !important;\n          }\n          @media (max-width: 600px) {\n            .responsive-container {\n              max-width: 100% !important;\n            }\n          }\n          /* Optional: If you decide to use a CSS class for focus styles */\n          .search-input:focus {\n            background-color: #e0e0e0;\n            border-color: #999;\n          }\n        `}),/*#__PURE__*/_jsxs(\"div\",{style:headerStyle,children:[/*#__PURE__*/_jsx(\"div\",{children:\"Music Search\"}),/*#__PURE__*/_jsx(Link,{to:\"/\",style:{...navLinkStyle,...(location.pathname===\"/\"?activeNavLinkStyle:{})},children:\"Search\"}),/*#__PURE__*/_jsx(Link,{to:\"/list\",style:{...navLinkStyle,...(location.pathname===\"/list\"?activeNavLinkStyle:{})},children:\"My Albums\"})]}),/*#__PURE__*/_jsx(\"div\",{style:searchContainerStyle,children:/*#__PURE__*/_jsx(\"input\",{value:query,onChange:e=>setQuery(e.target.value),placeholder:\"What album do you want to add?\",style:searchInputStyle})}),albums.length>0&&/*#__PURE__*/_jsxs(\"div\",{style:resultsContainerStyle,className:\"responsive-container\",children:[/*#__PURE__*/_jsx(\"h2\",{style:resultsHeadingStyle,children:\"Results\"}),/*#__PURE__*/_jsx(\"div\",{style:listStyle,children:albums.map(album=>{const isAdded=addedIds.has(album.id);return/*#__PURE__*/_jsx(AlbumItem,{album:album,isAdded:isAdded,onToggle:()=>handleToggleAlbum(album,isAdded)},album.id);})})]})]});}async function getSpotifyToken(){return process.env.REACT_APP_SPOTIFY_TOKEN;}export default SearchPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","useLocation","AlbumItem","jsx","_jsx","jsxs","_jsxs","SearchPage","query","setQuery","albums","setAlbums","token","setToken","addedAlbums","setAddedAlbums","location","fetchToken","tk","getSpotifyToken","fetchAddedAlbums","response","fetch","ok","Error","data","json","error","console","alert","handleSearch","encodeURIComponent","headers","Authorization","items","delayDebounce","setTimeout","clearTimeout","handleAddAlbum","album","existingAlbumsResponse","existingAlbums","isDuplicate","some","storedAlbum","spotifyId","id","albumToPost","rating","genres","method","body","JSON","stringify","newAlbum","prev","handleRemoveAlbum","stored","find","a","filter","handleToggleAlbum","isAdded","addedIds","Set","map","headerStyle","backgroundColor","color","padding","fontWeight","fontSize","display","alignItems","justifyContent","gap","fontFamily","navLinkStyle","textDecoration","activeNavLinkStyle","searchContainerStyle","margin","textAlign","searchInputStyle","width","marginRight","border","borderRadius","outline","boxSizing","transition","resultsContainerStyle","maxWidth","resultsHeadingStyle","marginBottom","listStyle","flexDirection","pageStyle","minHeight","style","children","to","pathname","value","onChange","e","target","placeholder","length","className","has","onToggle","process","env","REACT_APP_SPOTIFY_TOKEN"],"sources":["/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport AlbumItem from \"../components/AlbumItem\";\n\nfunction SearchPage() {\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n  const location = useLocation(); //determine the active page\n\n  // fetch Spotify token on component mount\n  useEffect(() => {\n    async function fetchToken() {\n      const tk = await getSpotifyToken();\n      setToken(tk);\n    }\n    fetchToken();\n  }, []);\n\n  // fetch added albums on component mount\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      try {\n        const response = await fetch(\n          \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch added albums.\");\n        }\n        const data = await response.json();\n        setAddedAlbums(data);\n      } catch (error) {\n        console.error(error);\n        alert(\"Error fetching added albums.\");\n      }\n    }\n    fetchAddedAlbums();\n  }, []);\n\n  const handleSearch = useCallback(async () => {\n    if (!query || !token) return;\n\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${encodeURIComponent(\n          query\n        )}&type=album`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch albums from Spotify.\");\n      }\n\n      const data = await response.json();\n      setAlbums(data.albums ? data.albums.items : []);\n    } catch (error) {\n      console.error(error);\n      alert(\"Error fetching albums from Spotify.\");\n    }\n  }, [query, token]);\n\n  // trigger search whenever search field changes\n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      if (query && token) {\n        handleSearch();\n      } else {\n        setAlbums([]);\n      }\n    }, 500); // 500ms debounce to prevent excessive API calls\n\n    return () => clearTimeout(delayDebounce);\n  }, [query, token, handleSearch]);\n\n  const handleAddAlbum = async (album) => {\n    try {\n      // Check for duplicates\n      const existingAlbumsResponse = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n      );\n      if (!existingAlbumsResponse.ok) {\n        throw new Error(\"Failed to fetch existing albums.\");\n      }\n      const existingAlbums = await existingAlbumsResponse.json();\n\n      const isDuplicate = existingAlbums.some(\n        (storedAlbum) => storedAlbum.spotifyId === album.id\n      );\n      if (isDuplicate) {\n        alert(\"Album is already added.\");\n        return;\n      }\n\n      const albumToPost = {\n        ...album,\n        spotifyId: album.id,\n        rating: 3,\n        genres: [],\n      };\n\n      const response = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(albumToPost),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add album.\");\n      }\n\n      const newAlbum = await response.json();\n      setAddedAlbums((prev) => [...prev, newAlbum]);\n      alert(\"Album added successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error adding album.\");\n    }\n  };\n\n  const handleRemoveAlbum = async (album) => {\n    try {\n      const stored = addedAlbums.find((a) => a.spotifyId === album.id);\n      if (!stored) {\n        alert(\"Album not found.\");\n        return;\n      }\n\n      const response = await fetch(\n        `https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to remove album.\");\n      }\n\n      setAddedAlbums((prev) => prev.filter((a) => a.id !== stored.id));\n      alert(\"Album removed successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error removing album.\");\n    }\n  };\n\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n\n  const addedIds = new Set(addedAlbums.map((a) => a.spotifyId));\n\n  // navbar styling\n  const headerStyle = {\n    backgroundColor: \"#111111\",\n    color: \"#fff\",\n    padding: \"20px\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: \"20px\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const navLinkStyle = {\n    color: \"#AEAEAE\",\n    textDecoration: \"none\",\n    fontSize: \"16px\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const activeNavLinkStyle = {\n    color: \"#fff\",\n  };\n\n  const searchContainerStyle = {\n    margin: \"20px auto\",\n    textAlign: \"center\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const searchInputStyle = {\n    padding: \"8px\",\n    width: \"300px\",\n    marginRight: \"10px\",\n    backgroundColor: \"#f0f0f0\", // light gray background\n    color: \"#333\", // dark text\n    border: \"1px solid #ccc\", // light border\n    borderRadius: \"4px\", // rounded corners\n    outline: \"none\", // remove default outline\n    boxSizing: \"border-box\", // ensure padding doesn't affect overall width\n    transition: \"background-color 0.3s, border-color 0.3s\", // smooth transition on focus\n  };\n\n  const resultsContainerStyle = {\n    margin: \"20px auto\",\n    maxWidth: \"70%\",\n    width: \"100%\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const resultsHeadingStyle = {\n    fontSize: \"20px\",\n    marginBottom: \"10px\",\n  };\n\n  const listStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\",\n  };\n\n  const pageStyle = {\n    backgroundColor: \"#111111\",\n    color: \"#fff\",\n    fontFamily: \"sans-serif\",\n    minHeight: \"100vh\",\n  };\n\n  return (\n    <div style={pageStyle}>\n      <style>\n        {`\n          a:hover {\n            color: #fff !important;\n          }\n          @media (max-width: 600px) {\n            .responsive-container {\n              max-width: 100% !important;\n            }\n          }\n          /* Optional: If you decide to use a CSS class for focus styles */\n          .search-input:focus {\n            background-color: #e0e0e0;\n            border-color: #999;\n          }\n        `}\n      </style>\n\n      {/* Navbar */}\n      <div style={headerStyle}>\n        <div>Music Search</div>\n        <Link\n          to=\"/\"\n          style={{\n            ...navLinkStyle,\n            ...(location.pathname === \"/\" ? activeNavLinkStyle : {}),\n          }}\n        >\n          Search\n        </Link>\n        <Link\n          to=\"/list\"\n          style={{\n            ...navLinkStyle,\n            ...(location.pathname === \"/list\" ? activeNavLinkStyle : {}),\n          }}\n        >\n          My Albums\n        </Link>\n      </div>\n\n      <div style={searchContainerStyle}>\n        <input\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"What album do you want to add?\"\n          style={searchInputStyle}\n        />\n      </div>\n\n      {albums.length > 0 && (\n        <div style={resultsContainerStyle} className=\"responsive-container\">\n          <h2 style={resultsHeadingStyle}>Results</h2>\n          <div style={listStyle}>\n            {albums.map((album) => {\n              const isAdded = addedIds.has(album.id);\n              return (\n                <AlbumItem\n                  key={album.id}\n                  album={album}\n                  isAdded={isAdded}\n                  onToggle={() => handleToggleAlbum(album, isAdded)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nasync function getSpotifyToken() {\n  return process.env.REACT_APP_SPOTIFY_TOKEN;\n}\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}