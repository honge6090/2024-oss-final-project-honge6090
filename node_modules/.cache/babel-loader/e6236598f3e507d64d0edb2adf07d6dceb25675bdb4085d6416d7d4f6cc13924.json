{"ast":null,"code":"var _jsxFileName = \"/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport AlbumItem from \"../components/AlbumItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchPage() {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n  const location = useLocation(); //determine the active page\n\n  // fetch Spotify token on component mount\n  useEffect(() => {\n    async function fetchToken() {\n      const tk = await getSpotifyToken();\n      setToken(tk);\n    }\n    fetchToken();\n  }, []);\n\n  // fetch added albums on component mount\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      try {\n        const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch added albums.\");\n        }\n        const data = await response.json();\n        setAddedAlbums(data);\n      } catch (error) {\n        console.error(error);\n        alert(\"Error fetching added albums.\");\n      }\n    }\n    fetchAddedAlbums();\n  }, []);\n  const handleSearch = useCallback(async () => {\n    if (!query || !token) return;\n    try {\n      const response = await fetch(`https://api.spotify.com/v1/search?q=${encodeURIComponent(query)}&type=album`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch albums from Spotify.\");\n      }\n      const data = await response.json();\n      setAlbums(data.albums ? data.albums.items : []);\n    } catch (error) {\n      console.error(error);\n      alert(\"Error fetching albums from Spotify.\");\n    }\n  }, [query, token]);\n\n  // trigger search whenever search field changes\n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      if (query && token) {\n        handleSearch();\n      } else {\n        setAlbums([]);\n      }\n    }, 500); // 500ms debounce to prevent excessive API calls\n\n    return () => clearTimeout(delayDebounce);\n  }, [query, token, handleSearch]);\n  const handleAddAlbum = async album => {\n    try {\n      // Check for duplicates\n      const existingAlbumsResponse = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");\n      if (!existingAlbumsResponse.ok) {\n        throw new Error(\"Failed to fetch existing albums.\");\n      }\n      const existingAlbums = await existingAlbumsResponse.json();\n      const isDuplicate = existingAlbums.some(storedAlbum => storedAlbum.spotifyId === album.id);\n      if (isDuplicate) {\n        alert(\"Album is already added.\");\n        return;\n      }\n      const albumToPost = {\n        ...album,\n        spotifyId: album.id,\n        rating: 3,\n        genres: []\n      };\n      const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(albumToPost)\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to add album.\");\n      }\n      const newAlbum = await response.json();\n      setAddedAlbums(prev => [...prev, newAlbum]);\n      alert(\"Album added successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error adding album.\");\n    }\n  };\n  const handleRemoveAlbum = async album => {\n    try {\n      const stored = addedAlbums.find(a => a.spotifyId === album.id);\n      if (!stored) {\n        alert(\"Album not found.\");\n        return;\n      }\n      const response = await fetch(`https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`, {\n        method: \"DELETE\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to remove album.\");\n      }\n      setAddedAlbums(prev => prev.filter(a => a.id !== stored.id));\n      alert(\"Album removed successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error removing album.\");\n    }\n  };\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n  const addedIds = new Set(addedAlbums.map(a => a.spotifyId));\n\n  // navbar styling\n  const headerStyle = {\n    backgroundColor: \"#111111\",\n    color: \"#fff\",\n    padding: \"20px\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: \"20px\",\n    fontFamily: \"sans-serif\"\n  };\n  const navLinkStyle = {\n    color: \"#AEAEAE\",\n    textDecoration: \"none\",\n    fontSize: \"16px\",\n    fontFamily: \"sans-serif\"\n  };\n  const activeNavLinkStyle = {\n    color: \"#fff\"\n  };\n  const searchContainerStyle = {\n    margin: \"20px auto\",\n    textAlign: \"center\",\n    fontFamily: \"sans-serif\"\n  };\n  const searchInputStyle = {\n    padding: \"8px\",\n    width: \"300px\",\n    marginRight: \"10px\",\n    backgroundColor: \"#f0f0f0\",\n    // light gray background\n    color: \"#333\",\n    // dark text\n    border: \"1px solid #ccc\",\n    // light border\n    borderRadius: \"4px\",\n    // rounded corners\n    outline: \"none\",\n    // remove default outline\n    boxSizing: \"border-box\",\n    // ensure padding doesn't affect overall width\n    transition: \"background-color 0.3s, border-color 0.3s\" // smooth transition on focus\n  };\n  const resultsContainerStyle = {\n    margin: \"20px auto\",\n    maxWidth: \"70%\",\n    width: \"100%\",\n    fontFamily: \"sans-serif\"\n  };\n  const resultsHeadingStyle = {\n    fontSize: \"20px\",\n    marginBottom: \"10px\"\n  };\n  const listStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\"\n  };\n  const pageStyle = {\n    backgroundColor: \"#111111\",\n    color: \"#fff\",\n    fontFamily: \"sans-serif\",\n    minHeight: \"100vh\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: pageStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      children: `\n          a:hover {\n            color: #fff !important;\n          }\n          @media (max-width: 600px) {\n            .responsive-container {\n              max-width: 100% !important;\n            }\n          }\n          /* Optional: If you decide to use a CSS class for focus styles */\n          .search-input:focus {\n            background-color: #e0e0e0;\n            border-color: #999;\n          }\n        `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: headerStyle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Music Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        style: {\n          ...navLinkStyle,\n          ...(location.pathname === \"/\" ? activeNavLinkStyle : {})\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/list\",\n        style: {\n          ...navLinkStyle,\n          ...(location.pathname === \"/list\" ? activeNavLinkStyle : {})\n        },\n        children: \"My Albums\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: searchContainerStyle,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        value: query,\n        onChange: e => setQuery(e.target.value),\n        placeholder: \"What album do you want to add?\",\n        style: searchInputStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), albums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: resultsContainerStyle,\n      className: \"responsive-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: resultsHeadingStyle,\n        children: \"Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: listStyle,\n        children: albums.map(album => {\n          const isAdded = addedIds.has(album.id);\n          return /*#__PURE__*/_jsxDEV(AlbumItem, {\n            album: album,\n            isAdded: isAdded,\n            onToggle: () => handleToggleAlbum(album, isAdded)\n          }, album.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 236,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchPage, \"kTRoEv97whLI6QH3d+5EkFY0vQY=\", false, function () {\n  return [useLocation];\n});\n_c = SearchPage;\nasync function getSpotifyToken() {\n  return process.env.REACT_APP_SPOTIFY_TOKEN;\n}\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Link","useLocation","AlbumItem","jsxDEV","_jsxDEV","SearchPage","_s","query","setQuery","albums","setAlbums","token","setToken","addedAlbums","setAddedAlbums","location","fetchToken","tk","getSpotifyToken","fetchAddedAlbums","response","fetch","ok","Error","data","json","error","console","alert","handleSearch","encodeURIComponent","headers","Authorization","items","delayDebounce","setTimeout","clearTimeout","handleAddAlbum","album","existingAlbumsResponse","existingAlbums","isDuplicate","some","storedAlbum","spotifyId","id","albumToPost","rating","genres","method","body","JSON","stringify","newAlbum","prev","handleRemoveAlbum","stored","find","a","filter","handleToggleAlbum","isAdded","addedIds","Set","map","headerStyle","backgroundColor","color","padding","fontWeight","fontSize","display","alignItems","justifyContent","gap","fontFamily","navLinkStyle","textDecoration","activeNavLinkStyle","searchContainerStyle","margin","textAlign","searchInputStyle","width","marginRight","border","borderRadius","outline","boxSizing","transition","resultsContainerStyle","maxWidth","resultsHeadingStyle","marginBottom","listStyle","flexDirection","pageStyle","minHeight","style","children","fileName","_jsxFileName","lineNumber","columnNumber","to","pathname","value","onChange","e","target","placeholder","length","className","has","onToggle","_c","process","env","REACT_APP_SPOTIFY_TOKEN","$RefreshReg$"],"sources":["/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/SearchPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport AlbumItem from \"../components/AlbumItem\";\n\nfunction SearchPage() {\n  const [query, setQuery] = useState(\"\");\n  const [albums, setAlbums] = useState([]);\n  const [token, setToken] = useState(\"\");\n  const [addedAlbums, setAddedAlbums] = useState([]);\n  const location = useLocation(); //determine the active page\n\n  // fetch Spotify token on component mount\n  useEffect(() => {\n    async function fetchToken() {\n      const tk = await getSpotifyToken();\n      setToken(tk);\n    }\n    fetchToken();\n  }, []);\n\n  // fetch added albums on component mount\n  useEffect(() => {\n    async function fetchAddedAlbums() {\n      try {\n        const response = await fetch(\n          \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n        );\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch added albums.\");\n        }\n        const data = await response.json();\n        setAddedAlbums(data);\n      } catch (error) {\n        console.error(error);\n        alert(\"Error fetching added albums.\");\n      }\n    }\n    fetchAddedAlbums();\n  }, []);\n\n  const handleSearch = useCallback(async () => {\n    if (!query || !token) return;\n\n    try {\n      const response = await fetch(\n        `https://api.spotify.com/v1/search?q=${encodeURIComponent(\n          query\n        )}&type=album`,\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch albums from Spotify.\");\n      }\n\n      const data = await response.json();\n      setAlbums(data.albums ? data.albums.items : []);\n    } catch (error) {\n      console.error(error);\n      alert(\"Error fetching albums from Spotify.\");\n    }\n  }, [query, token]);\n\n  // trigger search whenever search field changes\n  useEffect(() => {\n    const delayDebounce = setTimeout(() => {\n      if (query && token) {\n        handleSearch();\n      } else {\n        setAlbums([]);\n      }\n    }, 500); // 500ms debounce to prevent excessive API calls\n\n    return () => clearTimeout(delayDebounce);\n  }, [query, token, handleSearch]);\n\n  const handleAddAlbum = async (album) => {\n    try {\n      // Check for duplicates\n      const existingAlbumsResponse = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n      );\n      if (!existingAlbumsResponse.ok) {\n        throw new Error(\"Failed to fetch existing albums.\");\n      }\n      const existingAlbums = await existingAlbumsResponse.json();\n\n      const isDuplicate = existingAlbums.some(\n        (storedAlbum) => storedAlbum.spotifyId === album.id\n      );\n      if (isDuplicate) {\n        alert(\"Album is already added.\");\n        return;\n      }\n\n      const albumToPost = {\n        ...album,\n        spotifyId: album.id,\n        rating: 3,\n        genres: [],\n      };\n\n      const response = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\",\n        {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify(albumToPost),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to add album.\");\n      }\n\n      const newAlbum = await response.json();\n      setAddedAlbums((prev) => [...prev, newAlbum]);\n      alert(\"Album added successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error adding album.\");\n    }\n  };\n\n  const handleRemoveAlbum = async (album) => {\n    try {\n      const stored = addedAlbums.find((a) => a.spotifyId === album.id);\n      if (!stored) {\n        alert(\"Album not found.\");\n        return;\n      }\n\n      const response = await fetch(\n        `https://6728860f270bd0b97555efb5.mockapi.io/albums/${stored.id}`,\n        {\n          method: \"DELETE\",\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Failed to remove album.\");\n      }\n\n      setAddedAlbums((prev) => prev.filter((a) => a.id !== stored.id));\n      alert(\"Album removed successfully!\");\n    } catch (error) {\n      console.error(error);\n      alert(\"Error removing album.\");\n    }\n  };\n\n  const handleToggleAlbum = (album, isAdded) => {\n    if (isAdded) {\n      handleRemoveAlbum(album);\n    } else {\n      handleAddAlbum(album);\n    }\n  };\n\n  const addedIds = new Set(addedAlbums.map((a) => a.spotifyId));\n\n  // navbar styling\n  const headerStyle = {\n    backgroundColor: \"#111111\",\n    color: \"#fff\",\n    padding: \"20px\",\n    fontWeight: \"bold\",\n    fontSize: \"24px\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: \"20px\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const navLinkStyle = {\n    color: \"#AEAEAE\",\n    textDecoration: \"none\",\n    fontSize: \"16px\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const activeNavLinkStyle = {\n    color: \"#fff\",\n  };\n\n  const searchContainerStyle = {\n    margin: \"20px auto\",\n    textAlign: \"center\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const searchInputStyle = {\n    padding: \"8px\",\n    width: \"300px\",\n    marginRight: \"10px\",\n    backgroundColor: \"#f0f0f0\", // light gray background\n    color: \"#333\", // dark text\n    border: \"1px solid #ccc\", // light border\n    borderRadius: \"4px\", // rounded corners\n    outline: \"none\", // remove default outline\n    boxSizing: \"border-box\", // ensure padding doesn't affect overall width\n    transition: \"background-color 0.3s, border-color 0.3s\", // smooth transition on focus\n  };\n\n  const resultsContainerStyle = {\n    margin: \"20px auto\",\n    maxWidth: \"70%\",\n    width: \"100%\",\n    fontFamily: \"sans-serif\",\n  };\n\n  const resultsHeadingStyle = {\n    fontSize: \"20px\",\n    marginBottom: \"10px\",\n  };\n\n  const listStyle = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"20px\",\n  };\n\n  const pageStyle = {\n    backgroundColor: \"#111111\",\n    color: \"#fff\",\n    fontFamily: \"sans-serif\",\n    minHeight: \"100vh\",\n  };\n\n  return (\n    <div style={pageStyle}>\n      <style>\n        {`\n          a:hover {\n            color: #fff !important;\n          }\n          @media (max-width: 600px) {\n            .responsive-container {\n              max-width: 100% !important;\n            }\n          }\n          /* Optional: If you decide to use a CSS class for focus styles */\n          .search-input:focus {\n            background-color: #e0e0e0;\n            border-color: #999;\n          }\n        `}\n      </style>\n\n      {/* Navbar */}\n      <div style={headerStyle}>\n        <div>Music Search</div>\n        <Link\n          to=\"/\"\n          style={{\n            ...navLinkStyle,\n            ...(location.pathname === \"/\" ? activeNavLinkStyle : {}),\n          }}\n        >\n          Search\n        </Link>\n        <Link\n          to=\"/list\"\n          style={{\n            ...navLinkStyle,\n            ...(location.pathname === \"/list\" ? activeNavLinkStyle : {}),\n          }}\n        >\n          My Albums\n        </Link>\n      </div>\n\n      <div style={searchContainerStyle}>\n        <input\n          value={query}\n          onChange={(e) => setQuery(e.target.value)}\n          placeholder=\"What album do you want to add?\"\n          style={searchInputStyle}\n        />\n      </div>\n\n      {albums.length > 0 && (\n        <div style={resultsContainerStyle} className=\"responsive-container\">\n          <h2 style={resultsHeadingStyle}>Results</h2>\n          <div style={listStyle}>\n            {albums.map((album) => {\n              const isAdded = addedIds.has(album.id);\n              return (\n                <AlbumItem\n                  key={album.id}\n                  album={album}\n                  isAdded={isAdded}\n                  onToggle={() => handleToggleAlbum(album, isAdded)}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n\nasync function getSpotifyToken() {\n  return process.env.REACT_APP_SPOTIFY_TOKEN;\n}\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}