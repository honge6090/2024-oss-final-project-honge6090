{"ast":null,"code":"var _jsxFileName = \"/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/ListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ListPage() {\n  _s();\n  const [albums, setAlbums] = useState([]);\n  useEffect(() => {\n    async function fetchAlbums() {\n      const response = await fetch(\"https://6728860f270bd0b97555efb5.mockapi.io/albums\");\n      const data = await response.json();\n      setAlbums(data);\n    }\n    fetchAlbums();\n  }, []);\n\n  // Inline styles for the grid container and images.\n  // You may move these to a separate CSS file if preferred.\n  const gridContainerStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\n    gap: \"16px\",\n    padding: \"20px\"\n  };\n  const albumCoverStyle = {\n    width: \"100%\",\n    height: \"auto\",\n    objectFit: \"cover\",\n    borderRadius: \"8px\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Albums\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), albums.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No albums stored.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: gridContainerStyle,\n      children: albums.map(album => {\n        // Ensure we have an image to display\n        const albumCover = album.images && album.images[0] ? album.images[0].url : null;\n        if (!albumCover) return null;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: albumCover,\n          alt: album.name,\n          style: albumCoverStyle\n        }, album.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ListPage, \"lc/MwnjIUvbE/gAfqQrGJiZthlY=\");\n_c = ListPage;\nexport default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ListPage","_s","albums","setAlbums","fetchAlbums","response","fetch","data","json","gridContainerStyle","display","gridTemplateColumns","gap","padding","albumCoverStyle","width","height","objectFit","borderRadius","children","fileName","_jsxFileName","lineNumber","columnNumber","length","style","map","album","albumCover","images","url","src","alt","name","id","_c","$RefreshReg$"],"sources":["/Users/eugenehong/git/OSS/2024-oss-final-project-honge6090/src/pages/ListPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction ListPage() {\n  const [albums, setAlbums] = useState([]);\n\n  useEffect(() => {\n    async function fetchAlbums() {\n      const response = await fetch(\n        \"https://6728860f270bd0b97555efb5.mockapi.io/albums\"\n      );\n      const data = await response.json();\n      setAlbums(data);\n    }\n    fetchAlbums();\n  }, []);\n\n  // Inline styles for the grid container and images.\n  // You may move these to a separate CSS file if preferred.\n  const gridContainerStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(150px, 1fr))\",\n    gap: \"16px\",\n    padding: \"20px\",\n  };\n\n  const albumCoverStyle = {\n    width: \"100%\",\n    height: \"auto\",\n    objectFit: \"cover\",\n    borderRadius: \"8px\",\n  };\n\n  return (\n    <div>\n      <h1>My Albums</h1>\n      {albums.length === 0 ? (\n        <p>No albums stored.</p>\n      ) : (\n        <div style={gridContainerStyle}>\n          {albums.map((album) => {\n            // Ensure we have an image to display\n            const albumCover =\n              album.images && album.images[0] ? album.images[0].url : null;\n            if (!albumCover) return null;\n\n            return (\n              <img\n                key={album.id}\n                src={albumCover}\n                alt={album.name}\n                style={albumCoverStyle}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,eAAeO,WAAWA,CAAA,EAAG;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,oDACF,CAAC;MACD,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCL,SAAS,CAACI,IAAI,CAAC;IACjB;IACAH,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA,MAAMK,kBAAkB,GAAG;IACzBC,OAAO,EAAE,MAAM;IACfC,mBAAmB,EAAE,uCAAuC;IAC5DC,GAAG,EAAE,MAAM;IACXC,OAAO,EAAE;EACX,CAAC;EAED,MAAMC,eAAe,GAAG;IACtBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE,MAAM;IACdC,SAAS,EAAE,OAAO;IAClBC,YAAY,EAAE;EAChB,CAAC;EAED,oBACEnB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBrB,MAAM,CAACsB,MAAM,KAAK,CAAC,gBAClBzB,OAAA;MAAAoB,QAAA,EAAG;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAExBxB,OAAA;MAAK0B,KAAK,EAAEhB,kBAAmB;MAAAU,QAAA,EAC5BjB,MAAM,CAACwB,GAAG,CAAEC,KAAK,IAAK;QACrB;QACA,MAAMC,UAAU,GACdD,KAAK,CAACE,MAAM,IAAIF,KAAK,CAACE,MAAM,CAAC,CAAC,CAAC,GAAGF,KAAK,CAACE,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,GAAG,IAAI;QAC9D,IAAI,CAACF,UAAU,EAAE,OAAO,IAAI;QAE5B,oBACE7B,OAAA;UAEEgC,GAAG,EAAEH,UAAW;UAChBI,GAAG,EAAEL,KAAK,CAACM,IAAK;UAChBR,KAAK,EAAEX;QAAgB,GAHlBa,KAAK,CAACO,EAAE;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAId,CAAC;MAEN,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACtB,EAAA,CAxDQD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AA0DjB,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}